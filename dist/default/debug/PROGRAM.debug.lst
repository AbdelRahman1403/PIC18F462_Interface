

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 24 11:24:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,inline
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,inline
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    32   000000                     
    33                           ; Generated 17/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   00151A                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _lat_register
    73   00151A  89                 	db	137
    74   00151B  0F                 	db	15
    75   00151C  8A                 	db	138
    76   00151D  0F                 	db	15
    77   00151E  8B                 	db	139
    78   00151F  0F                 	db	15
    79   001520  8C                 	db	140
    80   001521  0F                 	db	15
    81   001522  8D                 	db	141
    82   001523  0F                 	db	15
    83                           
    84                           ;initializer for _port_register
    85   001524  80                 	db	128
    86   001525  0F                 	db	15
    87   001526  81                 	db	129
    88   001527  0F                 	db	15
    89   001528  82                 	db	130
    90   001529  0F                 	db	15
    91   00152A  83                 	db	131
    92   00152B  0F                 	db	15
    93   00152C  84                 	db	132
    94   00152D  0F                 	db	15
    95                           
    96                           ;initializer for _tris_register
    97   00152E  92                 	db	146
    98   00152F  0F                 	db	15
    99   001530  93                 	db	147
   100   001531  0F                 	db	15
   101   001532  94                 	db	148
   102   001533  0F                 	db	15
   103   001534  95                 	db	149
   104   001535  0F                 	db	15
   105   001536  96                 	db	150
   106   001537  0F                 	db	15
   107                           
   108                           ;initializer for _adc_1
   109   001538  01                 	db	1
   110   001539  01                 	db	1
   111   00153A  05                 	db	5
   112   00153B  03                 	db	3
   113                           
   114                           	psect	smallconst
   115   001000                     __psmallconst:
   116                           	callstack 0
   117   001000  00                 	db	0
   118   001001                     _button_values:
   119                           	callstack 0
   120   001001  37                 	db	55
   121   001002  38                 	db	56
   122   001003  39                 	db	57
   123   001004  2F                 	db	47
   124   001005  34                 	db	52
   125   001006  35                 	db	53
   126   001007  36                 	db	54
   127   001008  2A                 	db	42
   128   001009  31                 	db	49
   129   00100A  32                 	db	50
   130   00100B  33                 	db	51
   131   00100C  2D                 	db	45
   132   00100D  23                 	db	35
   133   00100E  30                 	db	48
   134   00100F  3D                 	db	61
   135   001010  2B                 	db	43
   136   001011                     __end_of_button_values:
   137                           	callstack 0
   138   000000                     _ADCON1bits	set	4033
   139   000000                     _ADRESL	set	4035
   140   000000                     _ADRESH	set	4036
   141   000000                     _INTCON2bits	set	4081
   142   000000                     _EECON2	set	4007
   143   000000                     _PORTBbits	set	3969
   144   000000                     _EECON1bits	set	4006
   145   000000                     _EEDATA	set	4008
   146   000000                     _EEADR	set	4009
   147   000000                     _EEADRH	set	4010
   148   000000                     _INTCONbits	set	4082
   149   000000                     _LATA	set	3977
   150   000000                     _PORTE	set	3972
   151   000000                     _PORTD	set	3971
   152   000000                     _PORTC	set	3970
   153   000000                     _PORTB	set	3969
   154   000000                     _PORTA	set	3968
   155   000000                     _TRISA	set	3986
   156   000000                     _ADCON2bits	set	4032
   157   000000                     _ADCON0bits	set	4034
   158   000000                     _INTCON3bits	set	4080
   159   000000                     _TRISE	set	3990
   160   000000                     _TRISD	set	3989
   161   000000                     _TRISC	set	3988
   162   000000                     _TRISB	set	3987
   163   000000                     _LATE	set	3981
   164   000000                     _LATD	set	3980
   165   000000                     _LATC	set	3979
   166   000000                     _LATB	set	3978
   167   001011  00                 	db	0	; dummy byte at the end
   168   000000                     
   169                           ; #config settings
   170                           
   171                           	psect	cinit
   172   0014B6                     __pcinit:
   173                           	callstack 0
   174   0014B6                     start_initialization:
   175                           	callstack 0
   176   0014B6                     __initialization:
   177                           	callstack 0
   178                           
   179                           ; Initialize objects allocated to COMRAM (34 bytes)
   180                           ; load TBLPTR registers with __pidataCOMRAM
   181   0014B6  0E1A               	movlw	low __pidataCOMRAM
   182   0014B8  6EF6               	movwf	tblptrl,c
   183   0014BA  0E15               	movlw	high __pidataCOMRAM
   184   0014BC  6EF7               	movwf	tblptrh,c
   185   0014BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   186   0014C0  6EF8               	movwf	tblptru,c
   187   0014C2  EE00  F02A         	lfsr	0,__pdataCOMRAM
   188   0014C6  EE10 F022          	lfsr	1,34
   189   0014CA                     copy_data0:
   190   0014CA  0009               	tblrd		*+
   191   0014CC  CFF5 FFEE          	movff	tablat,postinc0
   192   0014D0  50E5               	movf	postdec1,w,c
   193   0014D2  50E1               	movf	fsr1l,w,c
   194   0014D4  E1FA               	bnz	copy_data0
   195                           
   196                           ; Clear objects allocated to COMRAM (41 bytes)
   197   0014D6  EE00  F001         	lfsr	0,__pbssCOMRAM
   198   0014DA  0E29               	movlw	41
   199   0014DC                     clear_0:
   200   0014DC  6AEE               	clrf	postinc0,c
   201   0014DE  06E8               	decf	wreg,f,c
   202   0014E0  E1FD               	bnz	clear_0
   203   0014E2                     end_of_initialization:
   204                           	callstack 0
   205   0014E2                     __end_of__initialization:
   206                           	callstack 0
   207   0014E2  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208   0014E4  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209   0014E6  0100               	movlb	0
   210   0014E8  EF9E  F00A         	goto	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMRAM
   213   000001                     __pbssCOMRAM:
   214                           	callstack 0
   215   000001                     _res_2:
   216                           	callstack 0
   217   000001                     	ds	2
   218   000003                     _res_1:
   219                           	callstack 0
   220   000003                     	ds	2
   221   000005                     _RB7_IntrruptHandler_Low:
   222                           	callstack 0
   223   000005                     	ds	2
   224   000007                     _RB7_IntrruptHandler_High:
   225                           	callstack 0
   226   000007                     	ds	2
   227   000009                     _RB6_IntrruptHandler_Low:
   228                           	callstack 0
   229   000009                     	ds	2
   230   00000B                     _RB6_IntrruptHandler_High:
   231                           	callstack 0
   232   00000B                     	ds	2
   233   00000D                     _RB5_IntrruptHandler_Low:
   234                           	callstack 0
   235   00000D                     	ds	2
   236   00000F                     _RB5_IntrruptHandler_High:
   237                           	callstack 0
   238   00000F                     	ds	2
   239   000011                     _RB4_IntrruptHandler_Low:
   240                           	callstack 0
   241   000011                     	ds	2
   242   000013                     _RB4_IntrruptHandler_High:
   243                           	callstack 0
   244   000013                     	ds	2
   245   000015                     _INT2_IntrruptHandler:
   246                           	callstack 0
   247   000015                     	ds	2
   248   000017                     _INT1_IntrruptHandler:
   249                           	callstack 0
   250   000017                     	ds	2
   251   000019                     _INT0_IntrruptHandler:
   252                           	callstack 0
   253   000019                     	ds	2
   254   00001B                     _RB7_flag:
   255                           	callstack 0
   256   00001B                     	ds	1
   257   00001C                     _RB6_flag:
   258                           	callstack 0
   259   00001C                     	ds	1
   260   00001D                     _RB5_flag:
   261                           	callstack 0
   262   00001D                     	ds	1
   263   00001E                     _RB4_flag:
   264                           	callstack 0
   265   00001E                     	ds	1
   266   00001F                     reley_turn_off@F2898:
   267                           	callstack 0
   268   00001F                     	ds	1
   269   000020                     reley_turn_on@F2893:
   270                           	callstack 0
   271   000020                     	ds	1
   272   000021                     reley_initialize@F2888:
   273                           	callstack 0
   274   000021                     	ds	1
   275   000022                     led_turn_toggle@F2909:
   276                           	callstack 0
   277   000022                     	ds	1
   278   000023                     led_turn_off@F2904:
   279                           	callstack 0
   280   000023                     	ds	1
   281   000024                     led_turn_on@F2899:
   282                           	callstack 0
   283   000024                     	ds	1
   284   000025                     led_initialize@F2894:
   285                           	callstack 0
   286   000025                     	ds	1
   287   000026                     _Motor_pin2:
   288                           	callstack 0
   289   000026                     	ds	1
   290   000027                     _Motor_pin1:
   291                           	callstack 0
   292   000027                     	ds	1
   293   000028                     _res:
   294                           	callstack 0
   295   000028                     	ds	2
   296                           
   297                           	psect	dataCOMRAM
   298   00002A                     __pdataCOMRAM:
   299                           	callstack 0
   300   00002A                     _lat_register:
   301                           	callstack 0
   302   00002A                     	ds	10
   303   000034                     _port_register:
   304                           	callstack 0
   305   000034                     	ds	10
   306   00003E                     _tris_register:
   307                           	callstack 0
   308   00003E                     	ds	10
   309   000048                     _adc_1:
   310                           	callstack 0
   311   000048                     	ds	4
   312                           
   313                           	psect	cstackCOMRAM
   314   00004C                     __pcstackCOMRAM:
   315                           	callstack 0
   316   00004C                     RB4_ISR@level:
   317                           	callstack 0
   318   00004C                     RB5_ISR@level:
   319                           	callstack 0
   320   00004C                     RB6_ISR@level:
   321                           	callstack 0
   322   00004C                     RB7_ISR@level:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x0
   326   00004C                     	ds	1
   327   00004D                     ??_select_input_pin_channel:
   328   00004D                     ADC_Start_Conversion@_adc:
   329                           	callstack 0
   330   00004D                     ADC_Get_Conversion_Result@_adc:
   331                           	callstack 0
   332   00004D                     select_Result_Formant@adc:
   333                           	callstack 0
   334   00004D                     select_Voltage_Refernce@adc:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338   00004D                     	ds	1
   339   00004E                     ADC_Get_Conversion_Result@Conversion_Result:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x2
   343   00004E                     	ds	1
   344   00004F                     ??_ADC_Get_Conversion_Result:
   345   00004F                     select_input_pin_channel@channel:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x3
   349   00004F                     	ds	1
   350   000050                     ADC_INIT@_adc:
   351                           	callstack 0
   352   000050                     ADC_Select_Channel@_adc:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x4
   356   000050                     	ds	1
   357   000051                     ??_ADC_INIT:
   358   000051                     ADC_Select_Channel@adc_channel:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x5
   362   000051                     	ds	1
   363   000052                     ??_ADC_Select_Channel:
   364   000052                     ADC_Get_Conversion_Result@ret:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x6
   368   000052                     	ds	1
   369   000053                     ADC_Get_Conversion_Blocking@_adc:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x7
   373   000053                     	ds	1
   374   000054                     ADC_Get_Conversion_Blocking@Conversion_Result:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x8
   378   000054                     	ds	1
   379   000055                     ADC_Get_Conversion_Blocking@adc_channel:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x9
   383   000055                     	ds	1
   384   000056                     
   385                           ; 1 bytes @ 0xA
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 19 in file "application.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  2  710[None  ] int 
   398 ;; Registers used:
   399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels required when called: 5
   411 ;; This function calls:
   412 ;;		_ADC_Get_Conversion_Blocking
   413 ;;		_ADC_INIT
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text0
   420   00153C                     __ptext0:
   421                           	callstack 0
   422   00153C                     _main:
   423                           	callstack 26
   424   00153C                     
   425                           ;application.c: 21:    ADC_INIT(&adc_1);
   426   00153C  0E48               	movlw	low _adc_1
   427   00153E  6E50               	movwf	ADC_INIT@_adc^0,c
   428   001540  ECB0  F009         	call	_ADC_INIT	;wreg free
   429   001544                     l711:
   430                           
   431                           ;application.c: 23:         ADC_Get_Conversion_Blocking(&adc_1 , &res , ADC_CHANNEL_AN0)
      +                          ;
   432   001544  0E48               	movlw	low _adc_1
   433   001546  6E53               	movwf	ADC_Get_Conversion_Blocking@_adc^0,c
   434   001548  0E28               	movlw	low _res
   435   00154A  6E54               	movwf	ADC_Get_Conversion_Blocking@Conversion_Result^0,c
   436   00154C  0E00               	movlw	0
   437   00154E  6E55               	movwf	ADC_Get_Conversion_Blocking@adc_channel^0,c
   438   001550  ECF2  F009         	call	_ADC_Get_Conversion_Blocking	;wreg free
   439   001554  EFA2  F00A         	goto	l711
   440   001558  EF07  F000         	goto	start
   441   00155C                     __end_of_main:
   442                           	callstack 0
   443                           
   444 ;; *************** function _ADC_INIT *****************
   445 ;; Defined at:
   446 ;;		line 13 in file "MCAL_Layer/ADC/hal_adc.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;  _adc            1    4[COMRAM] PTR struct .
   449 ;;		 -> adc_1(4), 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  ret             1    0        unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      unsigned char 
   454 ;; Registers used:
   455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;Total ram usage:        2 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 3
   468 ;; This function calls:
   469 ;;		_select_Result_Formant
   470 ;;		_select_Voltage_Refernce
   471 ;;		_select_input_pin_channel
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text1
   478   001360                     __ptext1:
   479                           	callstack 0
   480   001360                     _ADC_INIT:
   481                           	callstack 27
   482   001360                     
   483                           ;MCAL_Layer/ADC/hal_adc.c: 15:     if(_adc == ((void*)0)){
   484   001360  5050               	movf	ADC_INIT@_adc^0,w,c
   485   001362  A4D8               	btfss	status,2,c
   486   001364  EFB6  F009         	goto	u1691
   487   001368  EFB8  F009         	goto	u1690
   488   00136C                     u1691:
   489   00136C  EFBA  F009         	goto	l742
   490   001370                     u1690:
   491   001370                     
   492                           ;MCAL_Layer/ADC/hal_adc.c: 17:     }
   493   001370  EFF1  F009         	goto	l744
   494   001374                     l742:
   495                           
   496                           ;MCAL_Layer/ADC/hal_adc.c: 20:         (ADCON0bits.ADON = 0);
   497   001374  90C2               	bcf	194,0,c	;volatile
   498   001376                     
   499                           ;MCAL_Layer/ADC/hal_adc.c: 22:         ADCON2bits.ACQT = _adc->adc_acquisition;
   500   001376  5050               	movf	ADC_INIT@_adc^0,w,c
   501   001378  6ED9               	movwf	fsr2l,c
   502   00137A  6ADA               	clrf	fsr2h,c
   503   00137C  0E01               	movlw	1
   504   00137E  26D9               	addwf	fsr2l,f,c
   505   001380  50DF               	movf	indf2,w,c
   506   001382  6E51               	movwf	??_ADC_INIT^0,c
   507   001384  4651               	rlncf	??_ADC_INIT^0,f,c
   508   001386  4651               	rlncf	??_ADC_INIT^0,f,c
   509   001388  4651               	rlncf	??_ADC_INIT^0,f,c
   510   00138A  50C0               	movf	192,w,c	;volatile
   511   00138C  1851               	xorwf	??_ADC_INIT^0,w,c
   512   00138E  0BC7               	andlw	-57
   513   001390  1851               	xorwf	??_ADC_INIT^0,w,c
   514   001392  6EC0               	movwf	192,c	;volatile
   515                           
   516                           ;MCAL_Layer/ADC/hal_adc.c: 24:         ADCON2bits.ADCS = _adc->adc_conversion;
   517   001394  5050               	movf	ADC_INIT@_adc^0,w,c
   518   001396  6ED9               	movwf	fsr2l,c
   519   001398  6ADA               	clrf	fsr2h,c
   520   00139A  0E02               	movlw	2
   521   00139C  26D9               	addwf	fsr2l,f,c
   522   00139E  50DF               	movf	indf2,w,c
   523   0013A0  6E51               	movwf	??_ADC_INIT^0,c
   524   0013A2  50C0               	movf	192,w,c	;volatile
   525   0013A4  1851               	xorwf	??_ADC_INIT^0,w,c
   526   0013A6  0BF8               	andlw	-8
   527   0013A8  1851               	xorwf	??_ADC_INIT^0,w,c
   528   0013AA  6EC0               	movwf	192,c	;volatile
   529                           
   530                           ;MCAL_Layer/ADC/hal_adc.c: 26:         ADCON0bits.CHS = _adc->adc_channal;
   531   0013AC  5050               	movf	ADC_INIT@_adc^0,w,c
   532   0013AE  6ED9               	movwf	fsr2l,c
   533   0013B0  6ADA               	clrf	fsr2h,c
   534   0013B2  50DF               	movf	indf2,w,c
   535   0013B4  6E51               	movwf	??_ADC_INIT^0,c
   536   0013B6  4651               	rlncf	??_ADC_INIT^0,f,c
   537   0013B8  4651               	rlncf	??_ADC_INIT^0,f,c
   538   0013BA  50C2               	movf	194,w,c	;volatile
   539   0013BC  1851               	xorwf	??_ADC_INIT^0,w,c
   540   0013BE  0BC3               	andlw	-61
   541   0013C0  1851               	xorwf	??_ADC_INIT^0,w,c
   542   0013C2  6EC2               	movwf	194,c	;volatile
   543   0013C4                     
   544                           ;MCAL_Layer/ADC/hal_adc.c: 27:         select_input_pin_channel(_adc->adc_channal);
   545   0013C4  5050               	movf	ADC_INIT@_adc^0,w,c
   546   0013C6  6ED9               	movwf	fsr2l,c
   547   0013C8  6ADA               	clrf	fsr2h,c
   548   0013CA  50DF               	movf	indf2,w,c
   549   0013CC  ECE8  F008         	call	_select_input_pin_channel
   550   0013D0                     
   551                           ;MCAL_Layer/ADC/hal_adc.c: 48:         select_Voltage_Refernce(_adc);
   552   0013D0  C050  F04D         	movff	ADC_INIT@_adc,select_Voltage_Refernce@adc
   553   0013D4  EC3C  F00A         	call	_select_Voltage_Refernce	;wreg free
   554   0013D8                     
   555                           ;MCAL_Layer/ADC/hal_adc.c: 50:         select_Result_Formant(_adc);
   556   0013D8  C050  F04D         	movff	ADC_INIT@_adc,select_Result_Formant@adc
   557   0013DC  EC1C  F00A         	call	_select_Result_Formant	;wreg free
   558   0013E0                     
   559                           ;MCAL_Layer/ADC/hal_adc.c: 52:         (ADCON0bits.ADON = 1);
   560   0013E0  80C2               	bsf	194,0,c	;volatile
   561   0013E2                     l744:
   562   0013E2  0012               	return		;funcret
   563   0013E4                     __end_of_ADC_INIT:
   564                           	callstack 0
   565                           
   566 ;; *************** function _select_Voltage_Refernce *****************
   567 ;; Defined at:
   568 ;;		line 255 in file "MCAL_Layer/ADC/hal_adc.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  adc             1    1[COMRAM] PTR struct .
   571 ;;		 -> adc_1(4), 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; Hardware stack levels required when called: 2
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_ADC_INIT
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text2
   598   001478                     __ptext2:
   599                           	callstack 0
   600   001478                     _select_Voltage_Refernce:
   601                           	callstack 27
   602   001478                     
   603                           ;MCAL_Layer/ADC/hal_adc.c: 256:     if(adc->voltage_format == 0x01u){
   604   001478  504D               	movf	select_Voltage_Refernce@adc^0,w,c
   605   00147A  6ED9               	movwf	fsr2l,c
   606   00147C  6ADA               	clrf	fsr2h,c
   607   00147E  0E03               	movlw	3
   608   001480  26D9               	addwf	fsr2l,f,c
   609   001482  A0DF               	btfss	indf2,0,c
   610   001484  EF46  F00A         	goto	u1631
   611   001488  EF48  F00A         	goto	u1630
   612   00148C                     u1631:
   613   00148C  EF4C  F00A         	goto	l2881
   614   001490                     u1630:
   615   001490  8AC1               	bsf	193,5,c	;volatile
   616   001492  88C1               	bsf	193,4,c	;volatile
   617   001494  EF5A  F00A         	goto	l823
   618   001498                     l2881:
   619   001498  504D               	movf	select_Voltage_Refernce@adc^0,w,c
   620   00149A  6ED9               	movwf	fsr2l,c
   621   00149C  6ADA               	clrf	fsr2h,c
   622   00149E  0E03               	movlw	3
   623   0014A0  26D9               	addwf	fsr2l,f,c
   624   0014A2  B0DF               	btfsc	indf2,0,c
   625   0014A4  EF56  F00A         	goto	u1641
   626   0014A8  EF58  F00A         	goto	u1640
   627   0014AC                     u1641:
   628   0014AC  EF5A  F00A         	goto	l823
   629   0014B0                     u1640:
   630   0014B0  9AC1               	bcf	193,5,c	;volatile
   631   0014B2  98C1               	bcf	193,4,c	;volatile
   632   0014B4                     l823:
   633   0014B4  0012               	return		;funcret
   634   0014B6                     __end_of_select_Voltage_Refernce:
   635                           	callstack 0
   636                           
   637 ;; *************** function _select_Result_Formant *****************
   638 ;; Defined at:
   639 ;;		line 243 in file "MCAL_Layer/ADC/hal_adc.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  adc             1    1[COMRAM] PTR struct .
   642 ;;		 -> adc_1(4), 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        1 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 2
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_ADC_INIT
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text3
   669   001438                     __ptext3:
   670                           	callstack 0
   671   001438                     _select_Result_Formant:
   672                           	callstack 27
   673   001438                     
   674                           ;MCAL_Layer/ADC/hal_adc.c: 244:     if(adc->result_format == 0x01u){
   675   001438  504D               	movf	select_Result_Formant@adc^0,w,c
   676   00143A  6ED9               	movwf	fsr2l,c
   677   00143C  6ADA               	clrf	fsr2h,c
   678   00143E  0E03               	movlw	3
   679   001440  26D9               	addwf	fsr2l,f,c
   680   001442  A2DF               	btfss	indf2,1,c
   681   001444  EF26  F00A         	goto	u1651
   682   001448  EF28  F00A         	goto	u1650
   683   00144C                     u1651:
   684   00144C  EF2B  F00A         	goto	l2887
   685   001450                     u1650:
   686   001450                     
   687                           ;MCAL_Layer/ADC/hal_adc.c: 245:         (ADCON2bits.ADFM = 1);
   688   001450  8EC0               	bsf	192,7,c	;volatile
   689                           
   690                           ;MCAL_Layer/ADC/hal_adc.c: 246:     }
   691   001452  EF3B  F00A         	goto	l812
   692   001456                     l2887:
   693   001456  504D               	movf	select_Result_Formant@adc^0,w,c
   694   001458  6ED9               	movwf	fsr2l,c
   695   00145A  6ADA               	clrf	fsr2h,c
   696   00145C  0E03               	movlw	3
   697   00145E  26D9               	addwf	fsr2l,f,c
   698   001460  B2DF               	btfsc	indf2,1,c
   699   001462  EF35  F00A         	goto	u1661
   700   001466  EF37  F00A         	goto	u1660
   701   00146A                     u1661:
   702   00146A  EF3A  F00A         	goto	l810
   703   00146E                     u1660:
   704   00146E                     
   705                           ;MCAL_Layer/ADC/hal_adc.c: 248:         (ADCON2bits.ADFM = 0);
   706   00146E  9EC0               	bcf	192,7,c	;volatile
   707                           
   708                           ;MCAL_Layer/ADC/hal_adc.c: 249:     }
   709   001470  EF3B  F00A         	goto	l812
   710   001474                     l810:
   711                           
   712                           ;MCAL_Layer/ADC/hal_adc.c: 251:         (ADCON2bits.ADFM = 1);
   713   001474  8EC0               	bsf	192,7,c	;volatile
   714   001476                     l812:
   715   001476  0012               	return		;funcret
   716   001478                     __end_of_select_Result_Formant:
   717                           	callstack 0
   718                           
   719 ;; *************** function _ADC_Get_Conversion_Blocking *****************
   720 ;; Defined at:
   721 ;;		line 162 in file "MCAL_Layer/ADC/hal_adc.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  _adc            1    7[COMRAM] PTR struct .
   724 ;;		 -> adc_1(4), 
   725 ;;  Conversion_R    1    8[COMRAM] PTR unsigned short 
   726 ;;		 -> res(2), 
   727 ;;  adc_channel     1    9[COMRAM] enum E2878
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  ret             1    0        unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      unsigned char 
   732 ;; Registers used:
   733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:        3 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 4
   746 ;; This function calls:
   747 ;;		_ADC_Get_Conversion_Result
   748 ;;		_ADC_Select_Channel
   749 ;;		_ADC_Start_Conversion
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text4
   756   0013E4                     __ptext4:
   757                           	callstack 0
   758   0013E4                     _ADC_Get_Conversion_Blocking:
   759                           	callstack 26
   760   0013E4                     
   761                           ;MCAL_Layer/ADC/hal_adc.c: 165:     if((_adc == ((void*)0)) || (Conversion_Result == ((v
      +                          oid*)0))){
   762   0013E4  5053               	movf	ADC_Get_Conversion_Blocking@_adc^0,w,c
   763   0013E6  B4D8               	btfsc	status,2,c
   764   0013E8  EFF8  F009         	goto	u1701
   765   0013EC  EFFA  F009         	goto	u1700
   766   0013F0                     u1701:
   767   0013F0  EF02  F00A         	goto	l2933
   768   0013F4                     u1700:
   769   0013F4  5054               	movf	ADC_Get_Conversion_Blocking@Conversion_Result^0,w,c
   770   0013F6  A4D8               	btfss	status,2,c
   771   0013F8  EF00  F00A         	goto	u1711
   772   0013FC  EF02  F00A         	goto	u1710
   773   001400                     u1711:
   774   001400  EF04  F00A         	goto	l2935
   775   001404                     u1710:
   776   001404                     l2933:
   777                           
   778                           ;MCAL_Layer/ADC/hal_adc.c: 167:     }
   779   001404  EF1B  F00A         	goto	l787
   780   001408                     l2935:
   781                           
   782                           ;MCAL_Layer/ADC/hal_adc.c: 170:         ADC_Select_Channel(_adc , adc_channel);
   783   001408  C053  F050         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_Select_Channel@_adc
   784   00140C  C055  F051         	movff	ADC_Get_Conversion_Blocking@adc_channel,ADC_Select_Channel@adc_channel
   785   001410  EC76  F00A         	call	_ADC_Select_Channel	;wreg free
   786                           
   787                           ;MCAL_Layer/ADC/hal_adc.c: 172:         ADC_Start_Conversion(_adc);
   788   001414  C053  F04D         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_Start_Conversion@_adc
   789   001418  ECE2  F00A         	call	_ADC_Start_Conversion	;wreg free
   790   00141C                     l784:
   791   00141C  B2C2               	btfsc	194,1,c	;volatile
   792   00141E  EF13  F00A         	goto	u1721
   793   001422  EF15  F00A         	goto	u1720
   794   001426                     u1721:
   795   001426  EF0E  F00A         	goto	l784
   796   00142A                     u1720:
   797   00142A  C053  F04D         	movff	ADC_Get_Conversion_Blocking@_adc,ADC_Get_Conversion_Result@_adc
   798   00142E  C054  F04E         	movff	ADC_Get_Conversion_Blocking@Conversion_Result,ADC_Get_Conversion_Result@Conversio
      +                          n_Result
   799   001432  EC54  F009         	call	_ADC_Get_Conversion_Result	;wreg free
   800   001436                     l787:
   801   001436  0012               	return		;funcret
   802   001438                     __end_of_ADC_Get_Conversion_Blocking:
   803                           	callstack 0
   804                           
   805 ;; *************** function _ADC_Start_Conversion *****************
   806 ;; Defined at:
   807 ;;		line 101 in file "MCAL_Layer/ADC/hal_adc.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  _adc            1    1[COMRAM] PTR struct .
   810 ;;		 -> adc_1(4), 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  ret             1    0        unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      unsigned char 
   815 ;; Registers used:
   816 ;;		wreg, status,2
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        1 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 2
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_ADC_Get_Conversion_Blocking
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text5
   837   0015C4                     __ptext5:
   838                           	callstack 0
   839   0015C4                     _ADC_Start_Conversion:
   840                           	callstack 27
   841   0015C4                     
   842                           ;MCAL_Layer/ADC/hal_adc.c: 103:     if(_adc == ((void*)0)){
   843   0015C4  504D               	movf	ADC_Start_Conversion@_adc^0,w,c
   844   0015C6  A4D8               	btfss	status,2,c
   845   0015C8  EFE8  F00A         	goto	u1681
   846   0015CC  EFEA  F00A         	goto	u1680
   847   0015D0                     u1681:
   848   0015D0  EFEC  F00A         	goto	l757
   849   0015D4                     u1680:
   850   0015D4                     
   851                           ;MCAL_Layer/ADC/hal_adc.c: 105:     }
   852   0015D4  EFED  F00A         	goto	l759
   853   0015D8                     l757:
   854                           
   855                           ;MCAL_Layer/ADC/hal_adc.c: 107:         (ADCON0bits.GODONE = 1);
   856   0015D8  82C2               	bsf	194,1,c	;volatile
   857   0015DA                     l759:
   858   0015DA  0012               	return		;funcret
   859   0015DC                     __end_of_ADC_Start_Conversion:
   860                           	callstack 0
   861                           
   862 ;; *************** function _ADC_Select_Channel *****************
   863 ;; Defined at:
   864 ;;		line 84 in file "MCAL_Layer/ADC/hal_adc.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  _adc            1    4[COMRAM] PTR struct .
   867 ;;		 -> adc_1(4), 
   868 ;;  adc_channel     1    5[COMRAM] enum E2878
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  ret             1    0        unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      unsigned char 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;Total ram usage:        3 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 3
   887 ;; This function calls:
   888 ;;		_select_input_pin_channel
   889 ;; This function is called by:
   890 ;;		_ADC_Get_Conversion_Blocking
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text6
   895   0014EC                     __ptext6:
   896                           	callstack 0
   897   0014EC                     _ADC_Select_Channel:
   898                           	callstack 26
   899   0014EC                     
   900                           ;MCAL_Layer/ADC/hal_adc.c: 86:     if(_adc == ((void*)0)){
   901   0014EC  5050               	movf	ADC_Select_Channel@_adc^0,w,c
   902   0014EE  A4D8               	btfss	status,2,c
   903   0014F0  EF7C  F00A         	goto	u1671
   904   0014F4  EF7E  F00A         	goto	u1670
   905   0014F8                     u1671:
   906   0014F8  EF80  F00A         	goto	l2895
   907   0014FC                     u1670:
   908   0014FC                     
   909                           ;MCAL_Layer/ADC/hal_adc.c: 88:     }
   910   0014FC  EF8C  F00A         	goto	l754
   911   001500                     l2895:
   912                           
   913                           ;MCAL_Layer/ADC/hal_adc.c: 90:         ADCON0bits.CHS = adc_channel;
   914   001500  C051  F052         	movff	ADC_Select_Channel@adc_channel,??_ADC_Select_Channel
   915   001504  4652               	rlncf	??_ADC_Select_Channel^0,f,c
   916   001506  4652               	rlncf	??_ADC_Select_Channel^0,f,c
   917   001508  50C2               	movf	194,w,c	;volatile
   918   00150A  1852               	xorwf	??_ADC_Select_Channel^0,w,c
   919   00150C  0BC3               	andlw	-61
   920   00150E  1852               	xorwf	??_ADC_Select_Channel^0,w,c
   921   001510  6EC2               	movwf	194,c	;volatile
   922   001512                     
   923                           ;MCAL_Layer/ADC/hal_adc.c: 91:         select_input_pin_channel(adc_channel);
   924   001512  5051               	movf	ADC_Select_Channel@adc_channel^0,w,c
   925   001514  ECE8  F008         	call	_select_input_pin_channel
   926   001518                     l754:
   927   001518  0012               	return		;funcret
   928   00151A                     __end_of_ADC_Select_Channel:
   929                           	callstack 0
   930                           
   931 ;; *************** function _select_input_pin_channel *****************
   932 ;; Defined at:
   933 ;;		line 197 in file "MCAL_Layer/ADC/hal_adc.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  channel         1    wreg     enum E2878
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  channel         1    3[COMRAM] enum E2878
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;Total ram usage:        3 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 2
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_ADC_INIT
   958 ;;		_ADC_Select_Channel
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text7
   963   0011D0                     __ptext7:
   964                           	callstack 0
   965   0011D0                     _select_input_pin_channel:
   966                           	callstack 27
   967                           
   968                           ;incstack = 0
   969                           ;select_input_pin_channel@channel stored from wreg
   970   0011D0  6E4F               	movwf	select_input_pin_channel@channel^0,c
   971   0011D2                     
   972                           ;MCAL_Layer/ADC/hal_adc.c: 198:     switch(channel)
   973   0011D2  EF12  F009         	goto	l1529
   974   0011D6                     l1501:
   975                           
   976                           ;MCAL_Layer/ADC/hal_adc.c: 201:             (TRISA |= ((uint8)1 << 0x0));
   977   0011D6  8092               	bsf	146,0,c	;volatile
   978                           
   979                           ;MCAL_Layer/ADC/hal_adc.c: 202:             break;
   980   0011D8  EF53  F009         	goto	l805
   981   0011DC                     l1503:
   982                           
   983                           ;MCAL_Layer/ADC/hal_adc.c: 204:             (TRISA |= ((uint8)1 << 0x1));
   984   0011DC  8292               	bsf	146,1,c	;volatile
   985                           
   986                           ;MCAL_Layer/ADC/hal_adc.c: 205:             break;
   987   0011DE  EF53  F009         	goto	l805
   988   0011E2                     l1505:
   989                           
   990                           ;MCAL_Layer/ADC/hal_adc.c: 207:             (TRISA |= ((uint8)1 << 0x2));
   991   0011E2  8492               	bsf	146,2,c	;volatile
   992                           
   993                           ;MCAL_Layer/ADC/hal_adc.c: 208:             break;
   994   0011E4  EF53  F009         	goto	l805
   995   0011E8                     l1507:
   996                           
   997                           ;MCAL_Layer/ADC/hal_adc.c: 210:             (TRISA |= ((uint8)1 << 0x3));
   998   0011E8  8692               	bsf	146,3,c	;volatile
   999                           
  1000                           ;MCAL_Layer/ADC/hal_adc.c: 211:             break;
  1001   0011EA  EF53  F009         	goto	l805
  1002   0011EE                     l1509:
  1003                           
  1004                           ;MCAL_Layer/ADC/hal_adc.c: 213:             (TRISA |= ((uint8)1 << 0x5));
  1005   0011EE  8A92               	bsf	146,5,c	;volatile
  1006                           
  1007                           ;MCAL_Layer/ADC/hal_adc.c: 214:             break;
  1008   0011F0  EF53  F009         	goto	l805
  1009   0011F4                     l1511:
  1010                           
  1011                           ;MCAL_Layer/ADC/hal_adc.c: 216:             (TRISE |= ((uint8)1 << 0x0));
  1012   0011F4  8096               	bsf	150,0,c	;volatile
  1013                           
  1014                           ;MCAL_Layer/ADC/hal_adc.c: 217:             break;
  1015   0011F6  EF53  F009         	goto	l805
  1016   0011FA                     l1513:
  1017                           
  1018                           ;MCAL_Layer/ADC/hal_adc.c: 219:             (TRISE |= ((uint8)1 << 0x1));
  1019   0011FA  8296               	bsf	150,1,c	;volatile
  1020                           
  1021                           ;MCAL_Layer/ADC/hal_adc.c: 220:             break;
  1022   0011FC  EF53  F009         	goto	l805
  1023   001200                     l1515:
  1024                           
  1025                           ;MCAL_Layer/ADC/hal_adc.c: 222:             (TRISE |= ((uint8)1 << 0x2));
  1026   001200  8496               	bsf	150,2,c	;volatile
  1027                           
  1028                           ;MCAL_Layer/ADC/hal_adc.c: 223:             break;
  1029   001202  EF53  F009         	goto	l805
  1030   001206                     l1517:
  1031                           
  1032                           ;MCAL_Layer/ADC/hal_adc.c: 225:             (TRISB |= ((uint8)1 << 0x2));
  1033   001206  8493               	bsf	147,2,c	;volatile
  1034                           
  1035                           ;MCAL_Layer/ADC/hal_adc.c: 226:             break;
  1036   001208  EF53  F009         	goto	l805
  1037   00120C                     l1519:
  1038                           
  1039                           ;MCAL_Layer/ADC/hal_adc.c: 228:             (TRISB |= ((uint8)1 << 0x3));
  1040   00120C  8693               	bsf	147,3,c	;volatile
  1041                           
  1042                           ;MCAL_Layer/ADC/hal_adc.c: 229:             break;
  1043   00120E  EF53  F009         	goto	l805
  1044   001212                     l1521:
  1045                           
  1046                           ;MCAL_Layer/ADC/hal_adc.c: 231:             (TRISB |= ((uint8)1 << 0x1));
  1047   001212  8293               	bsf	147,1,c	;volatile
  1048                           
  1049                           ;MCAL_Layer/ADC/hal_adc.c: 232:             break;
  1050   001214  EF53  F009         	goto	l805
  1051   001218                     l1523:
  1052                           
  1053                           ;MCAL_Layer/ADC/hal_adc.c: 234:             (TRISB |= ((uint8)1 << 0x4));
  1054   001218  8893               	bsf	147,4,c	;volatile
  1055                           
  1056                           ;MCAL_Layer/ADC/hal_adc.c: 235:             break;
  1057   00121A  EF53  F009         	goto	l805
  1058   00121E                     l1525:
  1059                           
  1060                           ;MCAL_Layer/ADC/hal_adc.c: 237:             (TRISB |= ((uint8)1 << 0x0));
  1061   00121E  8093               	bsf	147,0,c	;volatile
  1062                           
  1063                           ;MCAL_Layer/ADC/hal_adc.c: 238:             break;
  1064   001220  EF53  F009         	goto	l805
  1065   001224                     l1529:
  1066   001224  504F               	movf	select_input_pin_channel@channel^0,w,c
  1067   001226  6E4D               	movwf	??_select_input_pin_channel^0,c
  1068   001228  6A4E               	clrf	(??_select_input_pin_channel+1)^0,c
  1069                           
  1070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1071                           ; Switch size 1, requested type "simple"
  1072                           ; Number of cases is 1, Range of values is 0 to 0
  1073                           ; switch strategies available:
  1074                           ; Name         Instructions Cycles
  1075                           ; simple_byte            4     3 (average)
  1076                           ;	Chosen strategy is simple_byte
  1077   00122A  504E               	movf	(??_select_input_pin_channel+1)^0,w,c
  1078   00122C  0A00               	xorlw	0	; case 0
  1079   00122E  B4D8               	btfsc	status,2,c
  1080   001230  EF1C  F009         	goto	l2951
  1081   001234  EF53  F009         	goto	l805
  1082   001238                     l2951:
  1083                           
  1084                           ; Switch size 1, requested type "simple"
  1085                           ; Number of cases is 13, Range of values is 0 to 12
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; simple_byte           40    21 (average)
  1089                           ;	Chosen strategy is simple_byte
  1090   001238  504D               	movf	??_select_input_pin_channel^0,w,c
  1091   00123A  0A00               	xorlw	0	; case 0
  1092   00123C  B4D8               	btfsc	status,2,c
  1093   00123E  EFEB  F008         	goto	l1501
  1094   001242  0A01               	xorlw	1	; case 1
  1095   001244  B4D8               	btfsc	status,2,c
  1096   001246  EFEE  F008         	goto	l1503
  1097   00124A  0A03               	xorlw	3	; case 2
  1098   00124C  B4D8               	btfsc	status,2,c
  1099   00124E  EFF1  F008         	goto	l1505
  1100   001252  0A01               	xorlw	1	; case 3
  1101   001254  B4D8               	btfsc	status,2,c
  1102   001256  EFF4  F008         	goto	l1507
  1103   00125A  0A07               	xorlw	7	; case 4
  1104   00125C  B4D8               	btfsc	status,2,c
  1105   00125E  EFF7  F008         	goto	l1509
  1106   001262  0A01               	xorlw	1	; case 5
  1107   001264  B4D8               	btfsc	status,2,c
  1108   001266  EFFA  F008         	goto	l1511
  1109   00126A  0A03               	xorlw	3	; case 6
  1110   00126C  B4D8               	btfsc	status,2,c
  1111   00126E  EFFD  F008         	goto	l1513
  1112   001272  0A01               	xorlw	1	; case 7
  1113   001274  B4D8               	btfsc	status,2,c
  1114   001276  EF00  F009         	goto	l1515
  1115   00127A  0A0F               	xorlw	15	; case 8
  1116   00127C  B4D8               	btfsc	status,2,c
  1117   00127E  EF03  F009         	goto	l1517
  1118   001282  0A01               	xorlw	1	; case 9
  1119   001284  B4D8               	btfsc	status,2,c
  1120   001286  EF06  F009         	goto	l1519
  1121   00128A  0A03               	xorlw	3	; case 10
  1122   00128C  B4D8               	btfsc	status,2,c
  1123   00128E  EF09  F009         	goto	l1521
  1124   001292  0A01               	xorlw	1	; case 11
  1125   001294  B4D8               	btfsc	status,2,c
  1126   001296  EF0C  F009         	goto	l1523
  1127   00129A  0A07               	xorlw	7	; case 12
  1128   00129C  B4D8               	btfsc	status,2,c
  1129   00129E  EF0F  F009         	goto	l1525
  1130   0012A2  EF53  F009         	goto	l805
  1131   0012A6                     l805:
  1132   0012A6  0012               	return		;funcret
  1133   0012A8                     __end_of_select_input_pin_channel:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _ADC_Get_Conversion_Result *****************
  1137 ;; Defined at:
  1138 ;;		line 136 in file "MCAL_Layer/ADC/hal_adc.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  _adc            1    1[COMRAM] PTR struct .
  1141 ;;		 -> adc_1(4), 
  1142 ;;  Conversion_R    1    2[COMRAM] PTR unsigned short 
  1143 ;;		 -> res(2), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  ret             1    6[COMRAM] unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      unsigned char 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;Total ram usage:        6 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 2
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_ADC_Get_Conversion_Blocking
  1166 ;;		___ADC_InterruptHandler
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text8
  1171   0012A8                     __ptext8:
  1172                           	callstack 0
  1173   0012A8                     _ADC_Get_Conversion_Result:
  1174                           	callstack 27
  1175   0012A8                     
  1176                           ;MCAL_Layer/ADC/hal_adc.c: 138:     if((_adc == ((void*)0)) || (Conversion_Result == ((v
      +                          oid*)0))){
  1177   0012A8  504D               	movf	ADC_Get_Conversion_Result@_adc^0,w,c
  1178   0012AA  B4D8               	btfsc	status,2,c
  1179   0012AC  EF5A  F009         	goto	u1581
  1180   0012B0  EF5C  F009         	goto	u1580
  1181   0012B4                     u1581:
  1182   0012B4  EF64  F009         	goto	l2861
  1183   0012B8                     u1580:
  1184   0012B8  504E               	movf	ADC_Get_Conversion_Result@Conversion_Result^0,w,c
  1185   0012BA  A4D8               	btfss	status,2,c
  1186   0012BC  EF62  F009         	goto	u1591
  1187   0012C0  EF64  F009         	goto	u1590
  1188   0012C4                     u1591:
  1189   0012C4  EF68  F009         	goto	l2863
  1190   0012C8                     u1590:
  1191   0012C8                     l2861:
  1192                           
  1193                           ;MCAL_Layer/ADC/hal_adc.c: 139:         ret = (std_ReturnType) 0x00;
  1194   0012C8  0E00               	movlw	0
  1195   0012CA  6E52               	movwf	ADC_Get_Conversion_Result@ret^0,c
  1196                           
  1197                           ;MCAL_Layer/ADC/hal_adc.c: 140:     }
  1198   0012CC  EFAE  F009         	goto	l2875
  1199   0012D0                     l2863:
  1200                           
  1201                           ;MCAL_Layer/ADC/hal_adc.c: 142:          if(_adc->result_format == 0x01u){
  1202   0012D0  504D               	movf	ADC_Get_Conversion_Result@_adc^0,w,c
  1203   0012D2  6ED9               	movwf	fsr2l,c
  1204   0012D4  6ADA               	clrf	fsr2h,c
  1205   0012D6  0E03               	movlw	3
  1206   0012D8  26D9               	addwf	fsr2l,f,c
  1207   0012DA  A2DF               	btfss	indf2,1,c
  1208   0012DC  EF72  F009         	goto	u1601
  1209   0012E0  EF74  F009         	goto	u1600
  1210   0012E4                     u1601:
  1211   0012E4  EF87  F009         	goto	l2867
  1212   0012E8                     u1600:
  1213   0012E8                     l2865:
  1214                           
  1215                           ;MCAL_Layer/ADC/hal_adc.c: 143:             *Conversion_Result = (uint16)((ADRESH << 8) 
      +                          + ADRESL);
  1216   0012E8  50C3               	movf	195,w,c	;volatile
  1217   0012EA  CFC4 F04F          	movff	4036,??_ADC_Get_Conversion_Result	;volatile
  1218   0012EE  6A50               	clrf	(??_ADC_Get_Conversion_Result+1)^0,c
  1219   0012F0  C04F  F050         	movff	??_ADC_Get_Conversion_Result,??_ADC_Get_Conversion_Result+1
  1220   0012F4  6A4F               	clrf	??_ADC_Get_Conversion_Result^0,c
  1221   0012F6  264F               	addwf	??_ADC_Get_Conversion_Result^0,f,c
  1222   0012F8  0E00               	movlw	0
  1223   0012FA  2250               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,f,c
  1224   0012FC  504E               	movf	ADC_Get_Conversion_Result@Conversion_Result^0,w,c
  1225   0012FE  6ED9               	movwf	fsr2l,c
  1226   001300  6ADA               	clrf	fsr2h,c
  1227   001302  C04F  FFDE         	movff	??_ADC_Get_Conversion_Result,postinc2
  1228   001306  C050  FFDD         	movff	??_ADC_Get_Conversion_Result+1,postdec2
  1229                           
  1230                           ;MCAL_Layer/ADC/hal_adc.c: 144:         }
  1231   00130A  EFAC  F009         	goto	l2873
  1232   00130E                     l2867:
  1233   00130E  504D               	movf	ADC_Get_Conversion_Result@_adc^0,w,c
  1234   001310  6ED9               	movwf	fsr2l,c
  1235   001312  6ADA               	clrf	fsr2h,c
  1236   001314  0E03               	movlw	3
  1237   001316  26D9               	addwf	fsr2l,f,c
  1238   001318  B2DF               	btfsc	indf2,1,c
  1239   00131A  EF91  F009         	goto	u1611
  1240   00131E  EF93  F009         	goto	u1610
  1241   001322                     u1611:
  1242   001322  EF74  F009         	goto	l2865
  1243   001326                     u1610:
  1244   001326                     
  1245                           ;MCAL_Layer/ADC/hal_adc.c: 146:             *Conversion_Result = (uint16)(((ADRESH << 8)
      +                           + ADRESL) >> 6);
  1246   001326  50C3               	movf	195,w,c	;volatile
  1247   001328  CFC4 F04F          	movff	4036,??_ADC_Get_Conversion_Result	;volatile
  1248   00132C  6A50               	clrf	(??_ADC_Get_Conversion_Result+1)^0,c
  1249   00132E  C04F  F050         	movff	??_ADC_Get_Conversion_Result,??_ADC_Get_Conversion_Result+1
  1250   001332  6A4F               	clrf	??_ADC_Get_Conversion_Result^0,c
  1251   001334  264F               	addwf	??_ADC_Get_Conversion_Result^0,f,c
  1252   001336  0E00               	movlw	0
  1253   001338  2250               	addwfc	(??_ADC_Get_Conversion_Result+1)^0,f,c
  1254   00133A  0E06               	movlw	6
  1255   00133C  6E51               	movwf	(??_ADC_Get_Conversion_Result+2)^0,c
  1256   00133E                     u1625:
  1257   00133E  3450               	rlcf	(??_ADC_Get_Conversion_Result+1)^0,w,c
  1258   001340  3250               	rrcf	(??_ADC_Get_Conversion_Result+1)^0,f,c
  1259   001342  324F               	rrcf	??_ADC_Get_Conversion_Result^0,f,c
  1260   001344  2E51               	decfsz	(??_ADC_Get_Conversion_Result+2)^0,f,c
  1261   001346  EF9F  F009         	goto	u1625
  1262   00134A  504E               	movf	ADC_Get_Conversion_Result@Conversion_Result^0,w,c
  1263   00134C  6ED9               	movwf	fsr2l,c
  1264   00134E  6ADA               	clrf	fsr2h,c
  1265   001350  C04F  FFDE         	movff	??_ADC_Get_Conversion_Result,postinc2
  1266   001354  C050  FFDD         	movff	??_ADC_Get_Conversion_Result+1,postdec2
  1267   001358                     l2873:
  1268                           
  1269                           ;MCAL_Layer/ADC/hal_adc.c: 151:         ret = (std_ReturnType) 0x01;
  1270   001358  0E01               	movlw	1
  1271   00135A  6E52               	movwf	ADC_Get_Conversion_Result@ret^0,c
  1272   00135C                     l2875:
  1273                           
  1274                           ;MCAL_Layer/ADC/hal_adc.c: 153:     return ret;
  1275   00135C  5052               	movf	ADC_Get_Conversion_Result@ret^0,w,c
  1276   00135E  0012               	return		;funcret
  1277   001360                     __end_of_ADC_Get_Conversion_Result:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _Intrrupt_Manager_Priority *****************
  1281 ;; Defined at:
  1282 ;;		line 25 in file "MCAL_Layer/intrrupt/mcal_intrrupt_manager.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 1
  1303 ;; This function calls:
  1304 ;;		_INT0_ISR
  1305 ;;		_INT1_ISR
  1306 ;;		_INT2_ISR
  1307 ;;		_RB4_ISR
  1308 ;;		_RB5_ISR
  1309 ;;		_RB6_ISR
  1310 ;;		_RB7_ISR
  1311 ;; This function is called by:
  1312 ;;		Interrupt level 2
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	intcode
  1317   000008                     __pintcode:
  1318                           	callstack 0
  1319   000008                     _Intrrupt_Manager_Priority:
  1320                           	callstack 26
  1321                           
  1322                           ;incstack = 0
  1323   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1324   00000A  ED09  F008         	call	int_func,f	;refresh shadow registers
  1325                           
  1326                           	psect	intcode_body
  1327   001012                     __pintcode_body:
  1328                           	callstack 26
  1329   001012                     int_func:
  1330                           	callstack 26
  1331   001012  0006               	pop		; remove dummy address from shadow register refresh
  1332   001014                     
  1333                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 27:     if((INTCONbits.INT0IE == 1) && (IN
      +                          TCONbits.INT0IF == 1)){
  1334   001014  A8F2               	btfss	242,4,c	;volatile
  1335   001016  EF0F  F008         	goto	i2u127_41
  1336   00101A  EF11  F008         	goto	i2u127_40
  1337   00101E                     i2u127_41:
  1338   00101E  EF1A  F008         	goto	i2l671
  1339   001022                     i2u127_40:
  1340   001022  A2F2               	btfss	242,1,c	;volatile
  1341   001024  EF16  F008         	goto	i2u128_41
  1342   001028  EF18  F008         	goto	i2u128_40
  1343   00102C                     i2u128_41:
  1344   00102C  EF1A  F008         	goto	i2l671
  1345   001030                     i2u128_40:
  1346   001030                     
  1347                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 28:         INT0_ISR();
  1348   001030  ECF2  F00A         	call	_INT0_ISR	;wreg free
  1349   001034                     i2l671:
  1350                           
  1351                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 31:     if((INTCON3bits.INT1IE == 1) && (I
      +                          NTCON3bits.INT1IF == 1)){
  1352   001034  A6F0               	btfss	240,3,c	;volatile
  1353   001036  EF1F  F008         	goto	i2u129_41
  1354   00103A  EF21  F008         	goto	i2u129_40
  1355   00103E                     i2u129_41:
  1356   00103E  EF2A  F008         	goto	i2l673
  1357   001042                     i2u129_40:
  1358   001042  A0F0               	btfss	240,0,c	;volatile
  1359   001044  EF26  F008         	goto	i2u130_41
  1360   001048  EF28  F008         	goto	i2u130_40
  1361   00104C                     i2u130_41:
  1362   00104C  EF2A  F008         	goto	i2l673
  1363   001050                     i2u130_40:
  1364   001050                     
  1365                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 32:         INT1_ISR();
  1366   001050  ECF0  F00A         	call	_INT1_ISR	;wreg free
  1367   001054                     i2l673:
  1368                           
  1369                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 35:     if((INTCON3bits.INT2IE == 1) && (I
      +                          NTCON3bits.INT2IF == 1)){
  1370   001054  A8F0               	btfss	240,4,c	;volatile
  1371   001056  EF2F  F008         	goto	i2u131_41
  1372   00105A  EF31  F008         	goto	i2u131_40
  1373   00105E                     i2u131_41:
  1374   00105E  EF3A  F008         	goto	i2l675
  1375   001062                     i2u131_40:
  1376   001062  A2F0               	btfss	240,1,c	;volatile
  1377   001064  EF36  F008         	goto	i2u132_41
  1378   001068  EF38  F008         	goto	i2u132_40
  1379   00106C                     i2u132_41:
  1380   00106C  EF3A  F008         	goto	i2l675
  1381   001070                     i2u132_40:
  1382   001070                     
  1383                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 36:         INT2_ISR();
  1384   001070  ECEE  F00A         	call	_INT2_ISR	;wreg free
  1385   001074                     i2l675:
  1386                           
  1387                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 41:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1388   001074  A6F2               	btfss	242,3,c	;volatile
  1389   001076  EF3F  F008         	goto	i2u133_41
  1390   00107A  EF41  F008         	goto	i2u133_40
  1391   00107E                     i2u133_41:
  1392   00107E  EF56  F008         	goto	i2l677
  1393   001082                     i2u133_40:
  1394   001082  A0F2               	btfss	242,0,c	;volatile
  1395   001084  EF46  F008         	goto	i2u134_41
  1396   001088  EF48  F008         	goto	i2u134_40
  1397   00108C                     i2u134_41:
  1398   00108C  EF56  F008         	goto	i2l677
  1399   001090                     i2u134_40:
  1400   001090  8881               	bsf	129,4,c	;volatile
  1401   001092  041E               	decf	_RB4_flag^0,w,c	;volatile
  1402   001094  A4D8               	btfss	status,2,c
  1403   001096  EF4F  F008         	goto	i2u135_41
  1404   00109A  EF51  F008         	goto	i2u135_40
  1405   00109E                     i2u135_41:
  1406   00109E  EF56  F008         	goto	i2l677
  1407   0010A2                     i2u135_40:
  1408   0010A2                     
  1409                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 42:         (PORTBbits.RB4 = GPIO_HIGH) &&
      +                           (RB4_flag == 1)){;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 43:         RB4_flag = 0
      +                          ;
  1410   0010A2  0E00               	movlw	0
  1411   0010A4  6E1E               	movwf	_RB4_flag^0,c	;volatile
  1412   0010A6                     
  1413                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 44:         RB4_ISR(1);
  1414   0010A6  0E01               	movlw	1
  1415   0010A8  ECD5  F00A         	call	_RB4_ISR
  1416   0010AC                     i2l677:
  1417                           
  1418                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 47:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1419   0010AC  A6F2               	btfss	242,3,c	;volatile
  1420   0010AE  EF5B  F008         	goto	i2u136_41
  1421   0010B2  EF5D  F008         	goto	i2u136_40
  1422   0010B6                     i2u136_41:
  1423   0010B6  EF65  F008         	goto	i2l679
  1424   0010BA                     i2u136_40:
  1425   0010BA  A0F2               	btfss	242,0,c	;volatile
  1426   0010BC  EF62  F008         	goto	i2u137_41
  1427   0010C0  EF64  F008         	goto	i2u137_40
  1428   0010C4                     i2u137_41:
  1429   0010C4  EF65  F008         	goto	i2l679
  1430   0010C8                     i2u137_40:
  1431   0010C8  9881               	bcf	129,4,c	;volatile
  1432   0010CA                     i2l679:
  1433                           
  1434                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 53:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1435   0010CA  A6F2               	btfss	242,3,c	;volatile
  1436   0010CC  EF6A  F008         	goto	i2u138_41
  1437   0010D0  EF6C  F008         	goto	i2u138_40
  1438   0010D4                     i2u138_41:
  1439   0010D4  EF81  F008         	goto	i2l681
  1440   0010D8                     i2u138_40:
  1441   0010D8  A0F2               	btfss	242,0,c	;volatile
  1442   0010DA  EF71  F008         	goto	i2u139_41
  1443   0010DE  EF73  F008         	goto	i2u139_40
  1444   0010E2                     i2u139_41:
  1445   0010E2  EF81  F008         	goto	i2l681
  1446   0010E6                     i2u139_40:
  1447   0010E6  8A81               	bsf	129,5,c	;volatile
  1448   0010E8  041D               	decf	_RB5_flag^0,w,c	;volatile
  1449   0010EA  A4D8               	btfss	status,2,c
  1450   0010EC  EF7A  F008         	goto	i2u140_41
  1451   0010F0  EF7C  F008         	goto	i2u140_40
  1452   0010F4                     i2u140_41:
  1453   0010F4  EF81  F008         	goto	i2l681
  1454   0010F8                     i2u140_40:
  1455   0010F8                     
  1456                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 54:         (PORTBbits.RB5 = GPIO_HIGH) &&
      +                           (RB5_flag == 1)){;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 55:         RB5_flag = 0
      +                          ;
  1457   0010F8  0E00               	movlw	0
  1458   0010FA  6E1D               	movwf	_RB5_flag^0,c	;volatile
  1459   0010FC                     
  1460                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 56:         RB5_ISR(1);
  1461   0010FC  0E01               	movlw	1
  1462   0010FE  ECC8  F00A         	call	_RB5_ISR
  1463   001102                     i2l681:
  1464                           
  1465                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 59:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1466   001102  A6F2               	btfss	242,3,c	;volatile
  1467   001104  EF86  F008         	goto	i2u141_41
  1468   001108  EF88  F008         	goto	i2u141_40
  1469   00110C                     i2u141_41:
  1470   00110C  EF90  F008         	goto	i2l683
  1471   001110                     i2u141_40:
  1472   001110  A0F2               	btfss	242,0,c	;volatile
  1473   001112  EF8D  F008         	goto	i2u142_41
  1474   001116  EF8F  F008         	goto	i2u142_40
  1475   00111A                     i2u142_41:
  1476   00111A  EF90  F008         	goto	i2l683
  1477   00111E                     i2u142_40:
  1478   00111E  9A81               	bcf	129,5,c	;volatile
  1479   001120                     i2l683:
  1480                           
  1481                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 65:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1482   001120  A6F2               	btfss	242,3,c	;volatile
  1483   001122  EF95  F008         	goto	i2u143_41
  1484   001126  EF97  F008         	goto	i2u143_40
  1485   00112A                     i2u143_41:
  1486   00112A  EFAC  F008         	goto	i2l685
  1487   00112E                     i2u143_40:
  1488   00112E  A0F2               	btfss	242,0,c	;volatile
  1489   001130  EF9C  F008         	goto	i2u144_41
  1490   001134  EF9E  F008         	goto	i2u144_40
  1491   001138                     i2u144_41:
  1492   001138  EFAC  F008         	goto	i2l685
  1493   00113C                     i2u144_40:
  1494   00113C  8C81               	bsf	129,6,c	;volatile
  1495   00113E  041C               	decf	_RB6_flag^0,w,c	;volatile
  1496   001140  A4D8               	btfss	status,2,c
  1497   001142  EFA5  F008         	goto	i2u145_41
  1498   001146  EFA7  F008         	goto	i2u145_40
  1499   00114A                     i2u145_41:
  1500   00114A  EFAC  F008         	goto	i2l685
  1501   00114E                     i2u145_40:
  1502   00114E                     
  1503                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 66:         (PORTBbits.RB6 = GPIO_HIGH) &&
      +                           (RB6_flag == 1)){;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 67:         RB6_flag = 0
      +                          ;
  1504   00114E  0E00               	movlw	0
  1505   001150  6E1C               	movwf	_RB6_flag^0,c	;volatile
  1506   001152                     
  1507                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 68:         RB6_ISR(1);
  1508   001152  0E01               	movlw	1
  1509   001154  ECBB  F00A         	call	_RB6_ISR
  1510   001158                     i2l685:
  1511                           
  1512                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 71:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1513   001158  A6F2               	btfss	242,3,c	;volatile
  1514   00115A  EFB1  F008         	goto	i2u146_41
  1515   00115E  EFB3  F008         	goto	i2u146_40
  1516   001162                     i2u146_41:
  1517   001162  EFBB  F008         	goto	i2l687
  1518   001166                     i2u146_40:
  1519   001166  A0F2               	btfss	242,0,c	;volatile
  1520   001168  EFB8  F008         	goto	i2u147_41
  1521   00116C  EFBA  F008         	goto	i2u147_40
  1522   001170                     i2u147_41:
  1523   001170  EFBB  F008         	goto	i2l687
  1524   001174                     i2u147_40:
  1525   001174  9C81               	bcf	129,6,c	;volatile
  1526   001176                     i2l687:
  1527                           
  1528                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 78:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1529   001176  A6F2               	btfss	242,3,c	;volatile
  1530   001178  EFC0  F008         	goto	i2u148_41
  1531   00117C  EFC2  F008         	goto	i2u148_40
  1532   001180                     i2u148_41:
  1533   001180  EFD7  F008         	goto	i2l689
  1534   001184                     i2u148_40:
  1535   001184  A0F2               	btfss	242,0,c	;volatile
  1536   001186  EFC7  F008         	goto	i2u149_41
  1537   00118A  EFC9  F008         	goto	i2u149_40
  1538   00118E                     i2u149_41:
  1539   00118E  EFD7  F008         	goto	i2l689
  1540   001192                     i2u149_40:
  1541   001192  8E81               	bsf	129,7,c	;volatile
  1542   001194  041B               	decf	_RB7_flag^0,w,c	;volatile
  1543   001196  A4D8               	btfss	status,2,c
  1544   001198  EFD0  F008         	goto	i2u150_41
  1545   00119C  EFD2  F008         	goto	i2u150_40
  1546   0011A0                     i2u150_41:
  1547   0011A0  EFD7  F008         	goto	i2l689
  1548   0011A4                     i2u150_40:
  1549   0011A4                     
  1550                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 79:         (PORTBbits.RB7 = GPIO_HIGH) &&
      +                           (RB7_flag == 1)){;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 80:         RB7_flag = 0
      +                          ;
  1551   0011A4  0E00               	movlw	0
  1552   0011A6  6E1B               	movwf	_RB7_flag^0,c	;volatile
  1553   0011A8                     
  1554                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 81:         RB7_ISR(1);
  1555   0011A8  0E01               	movlw	1
  1556   0011AA  ECAE  F00A         	call	_RB7_ISR
  1557   0011AE                     i2l689:
  1558                           
  1559                           ;MCAL_Layer/intrrupt/mcal_intrrupt_manager.c: 84:     if((INTCONbits.RBIE == 1) && (INTC
      +                          ONbits.RBIF == 1) &&
  1560   0011AE  A6F2               	btfss	242,3,c	;volatile
  1561   0011B0  EFDC  F008         	goto	i2u151_41
  1562   0011B4  EFDE  F008         	goto	i2u151_40
  1563   0011B8                     i2u151_41:
  1564   0011B8  EFE6  F008         	goto	i2l692
  1565   0011BC                     i2u151_40:
  1566   0011BC  A0F2               	btfss	242,0,c	;volatile
  1567   0011BE  EFE3  F008         	goto	i2u152_41
  1568   0011C2  EFE5  F008         	goto	i2u152_40
  1569   0011C6                     i2u152_41:
  1570   0011C6  EFE6  F008         	goto	i2l692
  1571   0011CA                     i2u152_40:
  1572   0011CA  9E81               	bcf	129,7,c	;volatile
  1573   0011CC                     i2l692:
  1574   0011CC  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1575   0011CE  0011               	retfie		f
  1576   0011D0                     __end_of_Intrrupt_Manager_Priority:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _RB7_ISR *****************
  1580 ;; Defined at:
  1581 ;;		line 141 in file "MCAL_Layer/intrrupt/mcal_external_intrrupt.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  level           1    wreg     unsigned char 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  level           1    0[COMRAM] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;Total ram usage:        1 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_Intrrupt_Manager_Priority
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text10
  1609   00155C                     __ptext10:
  1610                           	callstack 0
  1611   00155C                     _RB7_ISR:
  1612                           	callstack 26
  1613                           
  1614                           ;incstack = 0
  1615                           ;RB7_ISR@level stored from wreg
  1616   00155C  6E4C               	movwf	RB7_ISR@level^0,c
  1617   00155E                     
  1618                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 143:     (INTCONbits.RBIF = 1);
  1619   00155E  80F2               	bsf	242,0,c	;volatile
  1620   001560                     
  1621                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 149:         RB7_IntrruptHandler_Low();
  1622   001560  504C               	movf	RB7_ISR@level^0,w,c
  1623   001562  A4D8               	btfss	status,2,c
  1624   001564  EFB6  F00A         	goto	i2u35_41
  1625   001568  EFB8  F00A         	goto	i2u35_40
  1626   00156C                     i2u35_41:
  1627   00156C  EFBA  F00A         	goto	i2l1825
  1628   001570                     i2u35_40:
  1629   001570  EFBA  F00A         	goto	i2l518
  1630   001574                     i2l1825:
  1631   001574                     i2l518:
  1632   001574  0012               	return		;funcret
  1633   001576                     __end_of_RB7_ISR:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _RB6_ISR *****************
  1637 ;; Defined at:
  1638 ;;		line 125 in file "MCAL_Layer/intrrupt/mcal_external_intrrupt.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  level           1    wreg     unsigned char 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  level           1    0[COMRAM] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;Total ram usage:        1 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_Intrrupt_Manager_Priority
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text11
  1666   001576                     __ptext11:
  1667                           	callstack 0
  1668   001576                     _RB6_ISR:
  1669                           	callstack 26
  1670                           
  1671                           ;incstack = 0
  1672                           ;RB6_ISR@level stored from wreg
  1673   001576  6E4C               	movwf	RB6_ISR@level^0,c
  1674   001578                     
  1675                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 127:     (INTCONbits.RBIF = 1);
  1676   001578  80F2               	bsf	242,0,c	;volatile
  1677   00157A                     
  1678                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 133:         RB6_IntrruptHandler_Low();
  1679   00157A  504C               	movf	RB6_ISR@level^0,w,c
  1680   00157C  A4D8               	btfss	status,2,c
  1681   00157E  EFC3  F00A         	goto	i2u34_41
  1682   001582  EFC5  F00A         	goto	i2u34_40
  1683   001586                     i2u34_41:
  1684   001586  EFC7  F00A         	goto	i2l1815
  1685   00158A                     i2u34_40:
  1686   00158A  EFC7  F00A         	goto	i2l511
  1687   00158E                     i2l1815:
  1688   00158E                     i2l511:
  1689   00158E  0012               	return		;funcret
  1690   001590                     __end_of_RB6_ISR:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _RB5_ISR *****************
  1694 ;; Defined at:
  1695 ;;		line 109 in file "MCAL_Layer/intrrupt/mcal_external_intrrupt.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  level           1    wreg     unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  level           1    0[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        1 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_Intrrupt_Manager_Priority
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text12
  1723   001590                     __ptext12:
  1724                           	callstack 0
  1725   001590                     _RB5_ISR:
  1726                           	callstack 26
  1727                           
  1728                           ;incstack = 0
  1729                           ;RB5_ISR@level stored from wreg
  1730   001590  6E4C               	movwf	RB5_ISR@level^0,c
  1731   001592                     
  1732                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 111:     (INTCONbits.RBIF = 1);
  1733   001592  80F2               	bsf	242,0,c	;volatile
  1734   001594                     
  1735                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 117:         RB5_IntrruptHandler_Low();
  1736   001594  504C               	movf	RB5_ISR@level^0,w,c
  1737   001596  A4D8               	btfss	status,2,c
  1738   001598  EFD0  F00A         	goto	i2u33_41
  1739   00159C  EFD2  F00A         	goto	i2u33_40
  1740   0015A0                     i2u33_41:
  1741   0015A0  EFD4  F00A         	goto	i2l1805
  1742   0015A4                     i2u33_40:
  1743   0015A4  EFD4  F00A         	goto	i2l504
  1744   0015A8                     i2l1805:
  1745   0015A8                     i2l504:
  1746   0015A8  0012               	return		;funcret
  1747   0015AA                     __end_of_RB5_ISR:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _RB4_ISR *****************
  1751 ;; Defined at:
  1752 ;;		line 93 in file "MCAL_Layer/intrrupt/mcal_external_intrrupt.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  level           1    wreg     unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  level           1    0[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        1 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_Intrrupt_Manager_Priority
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text13
  1780   0015AA                     __ptext13:
  1781                           	callstack 0
  1782   0015AA                     _RB4_ISR:
  1783                           	callstack 26
  1784                           
  1785                           ;incstack = 0
  1786                           ;RB4_ISR@level stored from wreg
  1787   0015AA  6E4C               	movwf	RB4_ISR@level^0,c
  1788   0015AC                     
  1789                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 95:     (INTCONbits.RBIF = 1);
  1790   0015AC  80F2               	bsf	242,0,c	;volatile
  1791   0015AE                     
  1792                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 101:         RB4_IntrruptHandler_Low();
  1793   0015AE  504C               	movf	RB4_ISR@level^0,w,c
  1794   0015B0  A4D8               	btfss	status,2,c
  1795   0015B2  EFDD  F00A         	goto	i2u32_41
  1796   0015B6  EFDF  F00A         	goto	i2u32_40
  1797   0015BA                     i2u32_41:
  1798   0015BA  EFE1  F00A         	goto	i2l1795
  1799   0015BE                     i2u32_40:
  1800   0015BE  EFE1  F00A         	goto	i2l497
  1801   0015C2                     i2l1795:
  1802   0015C2                     i2l497:
  1803   0015C2  0012               	return		;funcret
  1804   0015C4                     __end_of_RB4_ISR:
  1805                           	callstack 0
  1806                           
  1807 ;; *************** function _INT2_ISR *****************
  1808 ;; Defined at:
  1809 ;;		line 81 in file "MCAL_Layer/intrrupt/mcal_external_intrrupt.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		None
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_Intrrupt_Manager_Priority
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text14
  1837   0015DC                     __ptext14:
  1838                           	callstack 0
  1839   0015DC                     _INT2_ISR:
  1840                           	callstack 26
  1841   0015DC                     
  1842                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 83:     (INTCON3bits.INT2IF = 0);
  1843   0015DC  92F0               	bcf	240,1,c	;volatile
  1844   0015DE  0012               	return		;funcret
  1845   0015E0                     __end_of_INT2_ISR:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _INT1_ISR *****************
  1849 ;; Defined at:
  1850 ;;		line 70 in file "MCAL_Layer/intrrupt/mcal_external_intrrupt.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		None
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_Intrrupt_Manager_Priority
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text15
  1878   0015E0                     __ptext15:
  1879                           	callstack 0
  1880   0015E0                     _INT1_ISR:
  1881                           	callstack 26
  1882   0015E0                     
  1883                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 72:     (INTCON3bits.INT1IF = 0);
  1884   0015E0  90F0               	bcf	240,0,c	;volatile
  1885   0015E2  0012               	return		;funcret
  1886   0015E4                     __end_of_INT1_ISR:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _INT0_ISR *****************
  1890 ;; Defined at:
  1891 ;;		line 59 in file "MCAL_Layer/intrrupt/mcal_external_intrrupt.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		None
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_Intrrupt_Manager_Priority
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text16
  1919   0015E4                     __ptext16:
  1920                           	callstack 0
  1921   0015E4                     _INT0_ISR:
  1922                           	callstack 26
  1923   0015E4                     
  1924                           ;MCAL_Layer/intrrupt/mcal_external_intrrupt.c: 61:     (INTCONbits.INT0IF = 0);
  1925   0015E4  92F2               	bcf	242,1,c	;volatile
  1926   0015E6  0012               	return		;funcret
  1927   0015E8                     __end_of_INT0_ISR:
  1928                           	callstack 0
  1929                           
  1930                           	psect	rparam
  1931   000000                     
  1932                           	psect	temp
  1933   000056                     btemp:
  1934                           	callstack 0
  1935   000056                     	ds	1
  1936   000000                     int$flags	set	btemp
  1937   000000                     wtemp8	set	btemp+1
  1938   000000                     ttemp5	set	btemp+1
  1939   000000                     ttemp6	set	btemp+4
  1940   000000                     ttemp7	set	btemp+8
  1941                           tosu	equ	0xFFF
  1942                           tosh	equ	0xFFE
  1943                           tosl	equ	0xFFD
  1944                           stkptr	equ	0xFFC
  1945                           pclatu	equ	0xFFB
  1946                           pclath	equ	0xFFA
  1947                           pcl	equ	0xFF9
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           prodh	equ	0xFF4
  1953                           prodl	equ	0xFF3
  1954                           indf0	equ	0xFEF
  1955                           postinc0	equ	0xFEE
  1956                           postdec0	equ	0xFED
  1957                           preinc0	equ	0xFEC
  1958                           plusw0	equ	0xFEB
  1959                           fsr0h	equ	0xFEA
  1960                           fsr0l	equ	0xFE9
  1961                           wreg	equ	0xFE8
  1962                           indf1	equ	0xFE7
  1963                           postinc1	equ	0xFE6
  1964                           postdec1	equ	0xFE5
  1965                           preinc1	equ	0xFE4
  1966                           plusw1	equ	0xFE3
  1967                           fsr1h	equ	0xFE2
  1968                           fsr1l	equ	0xFE1
  1969                           bsr	equ	0xFE0
  1970                           indf2	equ	0xFDF
  1971                           postinc2	equ	0xFDE
  1972                           postdec2	equ	0xFDD
  1973                           preinc2	equ	0xFDC
  1974                           plusw2	equ	0xFDB
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        34
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     10      85
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Blocking@_adc	PTR struct . size(1) Largest target is 4
		 -> adc_1(COMRAM[4]), 

    ADC_Get_Conversion_Blocking@Conversion_Result	PTR unsigned short  size(1) Largest target is 2
		 -> res(COMRAM[2]), 

    ADC_Get_Conversion_Result@_adc	PTR struct . size(1) Largest target is 4
		 -> adc_1(COMRAM[4]), 

    ADC_Get_Conversion_Result@Conversion_Result	PTR unsigned short  size(1) Largest target is 2
		 -> res(COMRAM[2]), 

    ADC_INIT@_adc	PTR struct . size(1) Largest target is 4
		 -> adc_1(COMRAM[4]), 

    ADC_Select_Channel@_adc	PTR struct . size(1) Largest target is 4
		 -> adc_1(COMRAM[4]), 

    ADC_Start_Conversion@_adc	PTR struct . size(1) Largest target is 4
		 -> adc_1(COMRAM[4]), 

    INT0_IntrruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_IntrruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_IntrruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Intrrupt_INTx__SetIntrruptHandler@obj$EXT_IntrruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Intrrupt_INTx_Clear_Flag@obj$EXT_IntrruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Intrrupt_INTx_Disable@obj$EXT_IntrruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Intrrupt_INTx_Edge_Init@obj$EXT_IntrruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Intrrupt_INTx_Enable@obj$EXT_IntrruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Intrrupt_INTx_Pin_Init@obj$EXT_IntrruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Intrrupt_RBx_Enable@obj_rbx$EXT_IntrruptHandeler_High	PTR FTN()void  size(2) Largest target is 0

    Intrrupt_RBx_Enable@obj_rbx$EXT_IntrruptHandeler_Low	PTR FTN()void  size(2) Largest target is 0

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_IntrruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_IntrruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_IntrruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_IntrruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_IntrruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_IntrruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_IntrruptHandler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_IntrruptHandler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S845$EXT_IntrruptHandeler	PTR FTN()void  size(2) Largest target is 0

    S998$EXT_IntrruptHandeler_High	PTR FTN()void  size(2) Largest target is 0

    S998$EXT_IntrruptHandeler_Low	PTR FTN()void  size(2) Largest target is 0

    select_Result_Formant@adc	PTR struct . size(1) Largest target is 4
		 -> adc_1(COMRAM[4]), 

    select_Voltage_Refernce@adc	PTR struct . size(1) Largest target is 4
		 -> adc_1(COMRAM[4]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(BITBIGSFRlllh[1]), TRISC(BITBIGSFRlllh[1]), TRISD(BITBIGSFRlllh[1]), 
		 -> TRISE(BITBIGSFRlllh[1]), 


Critical Paths under _main in COMRAM

    _main->_ADC_Get_Conversion_Blocking
    _ADC_INIT->_select_input_pin_channel
    _ADC_Get_Conversion_Blocking->_ADC_Get_Conversion_Result
    _ADC_Get_Conversion_Blocking->_ADC_Select_Channel
    _ADC_Select_Channel->_select_input_pin_channel

Critical Paths under _Intrrupt_Manager_Priority in COMRAM

    _Intrrupt_Manager_Priority->_RB4_ISR
    _Intrrupt_Manager_Priority->_RB5_ISR
    _Intrrupt_Manager_Priority->_RB6_ISR
    _Intrrupt_Manager_Priority->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Intrrupt_Manager_Priority in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1718
        _ADC_Get_Conversion_Blocking
                           _ADC_INIT
 ---------------------------------------------------------------------------------
 (1) _ADC_INIT                                             3     2      1     494
                                              4 COMRAM     2     1      1
              _select_Result_Formant
            _select_Voltage_Refernce
           _select_input_pin_channel
 ---------------------------------------------------------------------------------
 (2) _select_Voltage_Refernce                              1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _select_Result_Formant                                1     0      1     120
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Get_Conversion_Blocking                          4     1      3    1224
                                              7 COMRAM     3     0      3
          _ADC_Get_Conversion_Result
                 _ADC_Select_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 2     1      1     107
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   4     2      2     242
                                              4 COMRAM     3     1      2
           _select_input_pin_channel
 ---------------------------------------------------------------------------------
 (2) _select_input_pin_channel                             3     3      0      15
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result                            6     4      2     483
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Intrrupt_Manager_Priority                            0     0      0     120
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get_Conversion_Blocking
     _ADC_Get_Conversion_Result
     _ADC_Select_Channel
       _select_input_pin_channel
     _ADC_Start_Conversion
   _ADC_INIT
     _select_Result_Formant
     _select_Voltage_Refernce
     _select_input_pin_channel

 _Intrrupt_Manager_Priority (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      A      55       1       67.5%
BITBIGSFRlhlhh      2B      0       0      37        0.0%
BITBIGSFRlhlll      15      0       0      38        0.0%
BITBIGSFRlllh        F      0       0      39        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRllllh       4      0       0      40        0.0%
BITBIGSFRlllll       4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      42        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 24 11:24:17 2024

                ADC_Get_Conversion_Result@ret 0052                                           l711 1544  
                                         l810 1474                                           l812 1476  
                                         l820 14B0                                           l805 12A6  
                                         l742 1374                                           l823 14B4  
                                         l816 1490                                           l744 13E2  
                                         l754 1518                                           l757 15D8  
                                         l759 15DA                                           l784 141C  
                                         l777 135E                                           l787 1436  
                                         _res 0028                           led_initialize@F2894 0025  
                                         wreg 0FE8                               __end_of_RB4_ISR 15C4  
                             __end_of_RB5_ISR 15AA                               __end_of_RB6_ISR 1590  
                             __end_of_RB7_ISR 1576                                          l1501 11D6  
                                        l1511 11F4                                          l1503 11DC  
                                        l1521 1212                                          l1513 11FA  
                                        l1505 11E2                                          l1523 1218  
                                        l1515 1200                                          l1507 11E8  
                                        l1525 121E                                          l1517 1206  
                                        l1509 11EE                                          l1519 120C  
                                        l1529 1224                                          l1499 11D2  
                                        l2903 15C4                                          l2911 1360  
                                        l2905 15D4                                          l2921 13D8  
                                        l2913 1370                                          l2907 15DA  
                                        l2931 13F4                                          l2923 13E0  
                                        l2915 1376                                          l2861 12C8  
                                        l2933 1404                                          l2925 13E2  
                                        l2917 13C4                                          l2863 12D0  
                                        l2951 1238                                          l2935 1408  
                                        l2919 13D0                                          l2943 153C  
                                        l2873 1358                                          l2865 12E8  
                                        l2857 12A8                                          l2937 142A  
                                        l2929 13E4                                          l2881 1498  
                                        l2867 130E                                          l2875 135C  
                                        l2859 12B8                                          l2891 14EC  
                                        l2939 1436                                          l2883 1438  
                                        l2869 1326                                          l2893 14FC  
                                        l2885 1450                                          l2895 1500  
                                        l2887 1456                                          l2879 1478  
                                        l2897 1512                                          l2889 146E  
                                        l2899 1518                                          _LATA 0F89  
                                        _LATB 0F8A                                          _LATC 0F8B  
                                        u1600 12E8                                          _LATD 0F8C  
                                        u1601 12E4                                          _LATE 0F8D  
                                        u1610 1326                                          u1611 1322  
                                        u1700 13F4                                          u1701 13F0  
                                        u1710 1404                                          u1630 1490  
                                        u1711 1400                                          u1631 148C  
                                        u1720 142A                                          u1640 14B0  
                                        u1625 133E                                          u1721 1426  
                                        u1641 14AC                                          u1650 1450  
                                        u1651 144C                                          u1580 12B8  
                                        u1660 146E                                          u1581 12B4  
                                        u1661 146A                                          u1590 12C8  
                                        u1670 14FC                                          u1591 12C4  
                                        u1671 14F8                                          u1680 15D4  
                                        u1681 15D0                                          u1690 1370  
                                        u1691 136C                              __end_of_ADC_INIT 13E4  
                                        _main 153C                                          fsr2h 0FDA  
                                        indf2 0FDF                                          fsr1l 0FE1  
                                        fsr2l 0FD9                                          btemp 0056  
                                        start 000E                      _select_input_pin_channel 11D0  
                                ___param_bank 0000                    __end_of_ADC_Select_Channel 151A  
                            __end_of_INT0_ISR 15E8                              __end_of_INT1_ISR 15E4  
                            __end_of_INT2_ISR 15E0                          _INT0_IntrruptHandler 0019  
                                       ?_main 004C                                         _EEADR 0FA9  
                                       i2l511 158E                                         i2l504 15A8  
                                       i2l518 1574                                         i2l480 15E6  
                                       i2l490 15DE                                         i2l485 15E2  
                                       i2l671 1034                                         i2l497 15C2  
                                       i2l681 1102                                         i2l673 1054  
                                       i2l683 1120                                         i2l675 1074  
                                       i2l692 11CC                                         i2l685 1158  
                                       i2l677 10AC                                         i2l687 1176  
                                       i2l679 10CA                                         i2l689 11AE  
                                       _PORTA 0F80                                         _PORTB 0F81  
                                       _PORTC 0F82                                         _PORTD 0F83  
                                       _PORTE 0F84                                         _TRISA 0F92  
                                       _TRISB 0F93                                         _TRISC 0F94  
                                       _TRISD 0F95                                         _TRISE 0F96  
                                       _adc_1 0048                          _ADC_Start_Conversion 15C4  
                                       _res_1 0003                                         _res_2 0001  
                                       tablat 0FF5                                         ttemp5 0057  
                                       ttemp6 005A                                         ttemp7 005E  
                                       status 0FD8                                         wtemp8 0057  
               __end_of_select_Result_Formant 1478                                  RB4_ISR@level 004C  
                             __initialization 14B6                                  __end_of_main 155C  
                                RB5_ISR@level 004C                                        ??_main 0056  
                               __activetblptr 0003                              led_turn_on@F2899 0024  
                                   ??_RB4_ISR 004C                                     ??_RB5_ISR 004C  
                                   ??_RB6_ISR 004C                                     ??_RB7_ISR 004C  
                        _INT1_IntrruptHandler 0017                                  RB6_ISR@level 004C  
                       ?_ADC_Start_Conversion 004D                                        _ADRESH 0FC4  
                                      _EEADRH 0FAA                                        _ADRESL 0FC3  
                                      _EEDATA 0FA8                                        _EECON2 0FA7  
                                      i2l1801 1594                                        i2l1811 157A  
                                      i2l1805 15A8                                        i2l1821 1560  
                                      i2l1815 158E                                        i2l1809 1578  
                                      i2l1825 1574                                        i2l1819 155E  
                                      i2l2811 11A4                                        i2l2731 1014  
                                      i2l1773 15E4                                        i2l2813 11A8  
                                      i2l2805 1184                                        i2l2741 1062  
                                      i2l2733 1022                                        i2l1783 15DC  
                                      i2l1791 15AE                                        i2l2815 11BC  
                                      i2l2807 1192                                        i2l2751 10A2  
                                      i2l2743 1070                                        i2l2735 1030  
                                      i2l1777 15E0                                        i2l2817 11CA  
                                      i2l2809 1194                                        i2l2753 10A6  
                                      i2l2745 1082                                        i2l2737 1042  
                                      i2l1795 15C2                                        i2l2771 10F8  
                                      i2l2755 10BA                                        i2l2747 1090  
                                      i2l2739 1050                                        i2l1789 15AC  
                                      i2l2773 10FC                                        i2l2765 10D8  
                                      i2l2757 10C8                                        i2l2749 1092  
                                      i2l1799 1592                                        i2l2791 114E  
                                      i2l2775 1110                                        i2l2767 10E6  
                                      i2l2793 1152                                        i2l2785 112E  
                                      i2l2777 111E                                        i2l2769 10E8  
                                      i2l2795 1166                                        i2l2787 113C  
                                      i2l2797 1174                                        i2l2789 113E  
                                RB7_ISR@level 004C                                 _tris_register 003E  
                 ??_Intrrupt_Manager_Priority 004D                                    _Motor_pin1 0027  
                                  _Motor_pin2 0026    ADC_Get_Conversion_Result@Conversion_Result 004E  
                     _select_Voltage_Refernce 1478                                        clear_0 14DC  
                                      isa$std 0001                      _RB5_IntrruptHandler_High 000F  
                                   ?_ADC_INIT 0050                                  __pdataCOMRAM 002A  
                                __mediumconst 0000                                        tblptrh 0FF7  
                                      tblptrl 0FF6                                        tblptru 0FF8  
         __end_of_ADC_Get_Conversion_Blocking 1438                   _ADC_Get_Conversion_Blocking 13E4  
                        _INT2_IntrruptHandler 0015                                    __accesstop 0080  
                     __end_of__initialization 14E2                                     ?_INT0_ISR 004C  
                                   ?_INT1_ISR 004C                                     ?_INT2_ISR 004C  
               ??_ADC_Get_Conversion_Blocking 0056                                 ___rparam_used 0001  
                              __pcstackCOMRAM 004C                       _RB4_IntrruptHandler_Low 0011  
                     _RB7_IntrruptHandler_Low 0005                                  ADC_INIT@_adc 0050  
                                  ??_ADC_INIT 0051                     _Intrrupt_Manager_Priority 0008  
                      ??_ADC_Start_Conversion 004E                    ?_ADC_Get_Conversion_Result 004D  
                  ??_select_input_pin_channel 004D                                    ??_INT0_ISR 004C  
                                  ??_INT1_ISR 004C                                    ??_INT2_ISR 004C  
                               _button_values 1001                     ??_select_Voltage_Refernce 004E  
                           led_turn_off@F2904 0023                                       _RB4_ISR 15AA  
                                     _RB5_ISR 1590                                       _RB6_ISR 1576  
                                     _RB7_ISR 155C                            _ADC_Select_Channel 14EC  
                       reley_initialize@F2888 0021                          led_turn_toggle@F2909 0022  
                                     i2u32_40 15BE                                       i2u32_41 15BA  
                                     i2u33_40 15A4                                       i2u33_41 15A0  
                                     i2u34_40 158A                                       i2u34_41 1586  
                                     i2u35_40 1570                                       i2u35_41 156C  
           __end_of_ADC_Get_Conversion_Result 1360                           ?_ADC_Select_Channel 0050  
                                     __Hparam 0000                                       __Lparam 0000  
                        ??_ADC_Select_Channel 0052                                  __psmallconst 1000  
                                     __pcinit 14B6                                       __ramtop 1000  
                                     __ptext0 153C                                       __ptext1 1360  
                                     __ptext2 1478                                       __ptext3 1438  
                                     __ptext4 13E4                                       __ptext5 15C4  
                                     __ptext6 14EC                                       __ptext7 11D0  
                                     __ptext8 12A8                           reley_turn_off@F2898 001F  
             __end_of_select_Voltage_Refernce 14B6                                __pintcode_body 1012  
                        end_of_initialization 14E2                                       int_func 1012  
                       _select_Result_Formant 1438                                       postdec1 0FE5  
                                     postdec2 0FDD                                       postinc0 0FEE  
                                     postinc2 0FDE                      ADC_Start_Conversion@_adc 004D  
                                   _PORTBbits 0F81              __end_of_select_input_pin_channel 12A8  
                               __pidataCOMRAM 151A                      _RB4_IntrruptHandler_High 0013  
                    _RB7_IntrruptHandler_High 0007                           start_initialization 14B6  
                 ??_ADC_Get_Conversion_Result 004F                                  _lat_register 002A  
                    select_Result_Formant@adc 004D                        ?_select_Result_Formant 004D  
               ADC_Get_Conversion_Result@_adc 004D                       _RB5_IntrruptHandler_Low 000D  
             select_input_pin_channel@channel 004F                    select_Voltage_Refernce@adc 004D  
                                    ?_RB4_ISR 004C                                      ?_RB5_ISR 004C  
                                    ?_RB6_ISR 004C                                      ?_RB7_ISR 004C  
                                 __pbssCOMRAM 0001                     _ADC_Get_Conversion_Result 12A8  
                                   __pintcode 0008                     ?_select_input_pin_channel 004C  
                                 __smallconst 1000                                      _ADC_INIT 1360  
                          reley_turn_on@F2893 0020                                      _INT0_ISR 15E4  
                                    _INT1_ISR 15E0                                      _INT2_ISR 15DC  
                    ?_select_Voltage_Refernce 004D                                      _RB4_flag 001E  
                                    _RB5_flag 001D                                      _RB6_flag 001C  
                                    _RB7_flag 001B                                      i2u130_40 1050  
                                    i2u130_41 104C                                      i2u131_40 1062  
                                    i2u131_41 105E                                      i2u140_40 10F8  
                                    i2u132_40 1070                                      i2u140_41 10F4  
                                    i2u132_41 106C                                      i2u141_40 1110  
                                    i2u133_40 1082                                      i2u141_41 110C  
                                    i2u133_41 107E                                      i2u150_40 11A4  
                                    i2u142_40 111E                                      i2u134_40 1090  
                                    i2u150_41 11A0                                      i2u142_41 111A  
                                    i2u134_41 108C                                      i2u151_40 11BC  
                                    i2u143_40 112E                                      i2u135_40 10A2  
                                    i2u127_40 1022                                      i2u151_41 11B8  
                                    i2u143_41 112A                                      i2u135_41 109E  
                                    i2u127_41 101E                                      i2u152_40 11CA  
                                    i2u144_40 113C                                      i2u136_40 10BA  
                                    i2u128_40 1030                                      i2u152_41 11C6  
                                    i2u144_41 1138                                      i2u136_41 10B6  
                                    i2u128_41 102C                                      i2u145_40 114E  
                                    i2u137_40 10C8                                      i2u129_40 1042  
                                    i2u145_41 114A                                      i2u137_41 10C4  
                                    i2u129_41 103E                                      i2u146_40 1166  
                                    i2u138_40 10D8                                      i2u146_41 1162  
                                    i2u138_41 10D4                                      i2u147_40 1174  
                                    i2u139_40 10E6                                      i2u147_41 1170  
                                    i2u139_41 10E2                                      i2u148_40 1184  
                                    i2u148_41 1180                                      i2u149_40 1192  
                                    i2u149_41 118E                                    _ADCON0bits 0FC2  
                                  _ADCON1bits 0FC1                                    _ADCON2bits 0FC0  
ADC_Get_Conversion_Blocking@Conversion_Result 0054                  ?_ADC_Get_Conversion_Blocking 0053  
                                 _INTCON2bits 0FF1                                   _INTCON3bits 0FF0  
                                   copy_data0 14CA                 ADC_Select_Channel@adc_channel 0051  
                                  _EECON1bits 0FA6                                      __Hrparam 0000  
                                    __Lrparam 0000                                      __ptext10 155C  
                                    __ptext11 1576                                      __ptext12 1590  
                                    __ptext13 15AA                                      __ptext14 15DC  
                                    __ptext15 15E0                                      __ptext16 15E4  
                     ??_select_Result_Formant 004E                         __end_of_button_values 1011  
                      ADC_Select_Channel@_adc 0050                                      isa$xinst 0000  
      ADC_Get_Conversion_Blocking@adc_channel 0055                                      int$flags 0056  
                    _RB6_IntrruptHandler_High 000B                                    _INTCONbits 0FF2  
                                    intlevel2 0000               ADC_Get_Conversion_Blocking@_adc 0053  
                  ?_Intrrupt_Manager_Priority 004C                  __end_of_ADC_Start_Conversion 15DC  
                     _RB6_IntrruptHandler_Low 0009                                 _port_register 0034  
           __end_of_Intrrupt_Manager_Priority 11D0  
